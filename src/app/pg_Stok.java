/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.time.LocalDate;
import java.time.LocalTime;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hakimfrh
 */
public class pg_Stok extends javax.swing.JPanel {

    /**
     * Creates new form Transaksi
     */
    PreparedStatement pst;
    String editkode, generatedkode;
    String[] stokkode = {};
    String[] krgstokkode = {};
    int editkerugian, editpengeluaran, editsubtotal, pembagi, perkali;
    ResultSet rs;
    boolean isnew, kod, kodker;
    String kategori;
    int ts = -1;
    int ks = -1;
    String pilihan;
    int krdus = 0 ;
    int  harga = 0 ;
    int sisastok = 0;
    String kodeBarang = "";
    String namabarang = "";
    int sisastok1 = 0;
    String kodeBarang1 = "";
    String namabarang1 = "";


    Date date = new Date();
    SimpleDateFormat m = new SimpleDateFormat("yyyy-MM-dd");
    DefaultTableModel modelstok = new DefaultTableModel();

    public static String[] addX(int n, String arr[], String x) {
        int i;
        String newarr[] = new String[n + 1];
        for (i = 0; i < n; i++) {
            newarr[i] = arr[i];
        }

        newarr[n] = x;
        return newarr;
    }

    public pg_Stok() {
        initComponents();
        load_kategori();
        load_table();
        pn_btn.setVisible(true);
        pn_lsbrg.setVisible(true);
        pn_tmbhbrg.setVisible(false);
        pn_tmbhstk.setVisible(false);
        pn_krgstk.setVisible(false);
        pn_edtbrg.setVisible(false);
        ktgr.setVisible(false);
        hgbl_stnbli.setVisible(false);
        hgbl_brg.setVisible(false);
        isi_brg.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grppil = new javax.swing.ButtonGroup();
        pn_btn = new javax.swing.JPanel();
        krgi_stk = new javax.swing.JLabel();
        tmbh_stk = new javax.swing.JLabel();
        tmbh_brg = new javax.swing.JLabel();
        lst_brg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pn_lsbrg = new javax.swing.JPanel();
        txt_cari = new javax.swing.JTextField();
        ktgr_brg = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_listbrg = new javax.swing.JTable();
        ktrg = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        pn_edtbrg = new javax.swing.JPanel();
        kd_brgedtbrg = new javax.swing.JTextField();
        nm_brgedtbrg = new javax.swing.JTextField();
        hgbl_stnbrgedtbrg = new javax.swing.JTextField();
        hgjl_edtbrg = new javax.swing.JTextField();
        ktgredtbrg = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        smpn_edtbrg = new javax.swing.JLabel();
        kmbl_edtbrg = new javax.swing.JLabel();
        ktgrioffedtbrg = new javax.swing.JLabel();
        boxktgr_edtbrg = new javax.swing.JComboBox<>();
        bg_edtbrg = new javax.swing.JLabel();
        pn_tmbhbrg = new javax.swing.JPanel();
        kd_brg = new javax.swing.JTextField();
        nm_brg = new javax.swing.JTextField();
        stn_brg = new javax.swing.JTextField();
        hgbl_stn = new javax.swing.JTextField();
        hgjl = new javax.swing.JTextField();
        ktgr = new javax.swing.JTextField();
        smpn_tmbhbrg = new javax.swing.JLabel();
        ktgrioff = new javax.swing.JLabel();
        boxktgr_tmbhbrg = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        pn_tmbhstk = new javax.swing.JPanel();
        kd_brgstk = new javax.swing.JTextField();
        jml_brg = new javax.swing.JTextField();
        hgbl_brg = new javax.swing.JTextField();
        isi_brg = new javax.swing.JTextField();
        hgbl_stnbli = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        dftr_pnglrn = new javax.swing.JTable();
        hps_tblstk = new javax.swing.JLabel();
        txt_nmbrg = new javax.swing.JLabel();
        hgbl_krds = new javax.swing.JLabel();
        hgblstn = new javax.swing.JLabel();
        tmbhdftrpnglrn = new javax.swing.JLabel();
        tmbl_oktmbhstk = new javax.swing.JLabel();
        ttl_pnglrn = new javax.swing.JLabel();
        pack = new javax.swing.JRadioButton();
        krds = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pn_krgstk = new javax.swing.JPanel();
        jmlkrg_stk = new javax.swing.JTextField();
        kd_krgstk = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        ktrangan = new javax.swing.JTextArea();
        dftr_brg = new javax.swing.JScrollPane();
        dftr_krugian = new javax.swing.JTable();
        tmbl_krgstk = new javax.swing.JLabel();
        ok_krg = new javax.swing.JLabel();
        hpstbl_krgstk = new javax.swing.JLabel();
        total_krg = new javax.swing.JLabel();
        nm_krg = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pn_btn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        krgi_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_kurangistok_off.png"))); // NOI18N
        krgi_stk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        krgi_stk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                krgi_stkMouseClicked(evt);
            }
        });
        pn_btn.add(krgi_stk, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, -1, -1));

        tmbh_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahstok_off.png"))); // NOI18N
        tmbh_stk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tmbh_stk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tmbh_stkMouseClicked(evt);
            }
        });
        pn_btn.add(tmbh_stk, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, -1, -1));

        tmbh_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahbarang_off.png"))); // NOI18N
        tmbh_brg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tmbh_brg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tmbh_brgMousePressed(evt);
            }
        });
        pn_btn.add(tmbh_brg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, -1));

        lst_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_listbarang_on.png"))); // NOI18N
        lst_brg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lst_brg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lst_brgMouseClicked(evt);
            }
        });
        pn_btn.add(lst_brg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/bg.png"))); // NOI18N
        pn_btn.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        add(pn_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pn_lsbrg.setPreferredSize(new java.awt.Dimension(1106, 700));
        pn_lsbrg.setLayout(null);

        txt_cari.setBorder(null);
        txt_cari.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_cariKeyReleased(evt);
            }
        });
        pn_lsbrg.add(txt_cari);
        txt_cari.setBounds(115, 111, 260, 20);

        ktgr_brg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua Kategori" }));
        ktgr_brg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ktgr_brg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ktgr_brgActionPerformed(evt);
            }
        });
        pn_lsbrg.add(ktgr_brg);
        ktgr_brg.setBounds(520, 105, 140, 30);

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        tbl_listbrg.setAutoCreateRowSorter(true);
        tbl_listbrg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_listbrg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tbl_listbrg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_listbrgMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_listbrg);

        pn_lsbrg.add(jScrollPane1);
        jScrollPane1.setBounds(70, 160, 960, 470);

        ktrg.setForeground(new java.awt.Color(255, 0, 0));
        pn_lsbrg.add(ktrg);
        ktrg.setBounds(710, 110, 200, 20);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/bg.png"))); // NOI18N
        pn_lsbrg.add(jLabel8);
        jLabel8.setBounds(0, 0, 1120, 700);

        add(pn_lsbrg, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 0, 1120, 690));

        pn_edtbrg.setLayout(null);

        kd_brgedtbrg.setBorder(null);
        pn_edtbrg.add(kd_brgedtbrg);
        kd_brgedtbrg.setBounds(49, 140, 220, 20);

        nm_brgedtbrg.setBorder(null);
        pn_edtbrg.add(nm_brgedtbrg);
        nm_brgedtbrg.setBounds(50, 200, 220, 20);

        hgbl_stnbrgedtbrg.setBorder(null);
        pn_edtbrg.add(hgbl_stnbrgedtbrg);
        hgbl_stnbrgedtbrg.setBounds(50, 260, 220, 20);

        hgjl_edtbrg.setBorder(null);
        pn_edtbrg.add(hgjl_edtbrg);
        hgjl_edtbrg.setBounds(50, 320, 220, 20);

        ktgredtbrg.setBorder(null);
        pn_edtbrg.add(ktgredtbrg);
        ktgredtbrg.setBounds(180, 390, 150, 20);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/btn_hapus_on.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        pn_edtbrg.add(jLabel3);
        jLabel3.setBounds(351, 449, 80, 30);

        smpn_edtbrg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/btn_simpan.png"))); // NOI18N
        smpn_edtbrg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        smpn_edtbrg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                smpn_edtbrgMouseClicked(evt);
            }
        });
        pn_edtbrg.add(smpn_edtbrg);
        smpn_edtbrg.setBounds(260, 450, 80, 30);

        kmbl_edtbrg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/btn_kembali.png"))); // NOI18N
        kmbl_edtbrg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kmbl_edtbrg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kmbl_edtbrgMouseClicked(evt);
            }
        });
        pn_edtbrg.add(kmbl_edtbrg);
        kmbl_edtbrg.setBounds(170, 450, 80, 30);

        ktgrioffedtbrg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/txt_kategori_off.png"))); // NOI18N
        pn_edtbrg.add(ktgrioffedtbrg);
        ktgrioffedtbrg.setBounds(170, 380, 170, 40);

        boxktgr_edtbrg.setMaximumRowCount(100);
        boxktgr_edtbrg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kategori Baru" }));
        boxktgr_edtbrg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boxktgr_edtbrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxktgr_edtbrgActionPerformed(evt);
            }
        });
        pn_edtbrg.add(boxktgr_edtbrg);
        boxktgr_edtbrg.setBounds(40, 386, 120, 30);

        bg_edtbrg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/pn_editbarang.png"))); // NOI18N
        pn_edtbrg.add(bg_edtbrg);
        bg_edtbrg.setBounds(0, 0, 1110, 695);

        add(pn_edtbrg, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 0, 1120, 690));

        pn_tmbhbrg.setLayout(null);

        kd_brg.setBorder(null);
        kd_brg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kd_brgKeyPressed(evt);
            }
        });
        pn_tmbhbrg.add(kd_brg);
        kd_brg.setBounds(49, 140, 220, 20);

        nm_brg.setBorder(null);
        pn_tmbhbrg.add(nm_brg);
        nm_brg.setBounds(50, 200, 220, 20);

        stn_brg.setBorder(null);
        pn_tmbhbrg.add(stn_brg);
        stn_brg.setBounds(50, 260, 100, 20);

        hgbl_stn.setBorder(null);
        pn_tmbhbrg.add(hgbl_stn);
        hgbl_stn.setBounds(50, 320, 220, 20);

        hgjl.setBorder(null);
        pn_tmbhbrg.add(hgjl);
        hgjl.setBounds(50, 380, 220, 20);

        ktgr.setBorder(null);
        pn_tmbhbrg.add(ktgr);
        ktgr.setBounds(160, 445, 150, 20);

        smpn_tmbhbrg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/Tambah barang/btn_tambah.png"))); // NOI18N
        smpn_tmbhbrg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        smpn_tmbhbrg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                smpn_tmbhbrgMouseClicked(evt);
            }
        });
        pn_tmbhbrg.add(smpn_tmbhbrg);
        smpn_tmbhbrg.setBounds(240, 500, 80, 30);

        ktgrioff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/Tambah barang/txt_kategori_off.png"))); // NOI18N
        ktgrioff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ktgrioffMouseClicked(evt);
            }
        });
        pn_tmbhbrg.add(ktgrioff);
        ktgrioff.setBounds(150, 440, 170, 30);

        boxktgr_tmbhbrg.setMaximumRowCount(100);
        boxktgr_tmbhbrg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kategori Baru" }));
        boxktgr_tmbhbrg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boxktgr_tmbhbrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxktgr_tmbhbrgActionPerformed(evt);
            }
        });
        pn_tmbhbrg.add(boxktgr_tmbhbrg);
        boxktgr_tmbhbrg.setBounds(40, 440, 100, 30);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/Tambah barang/bg.png"))); // NOI18N
        pn_tmbhbrg.add(jLabel7);
        jLabel7.setBounds(0, 0, 1110, 695);

        add(pn_tmbhbrg, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 0, 1120, 690));

        pn_tmbhstk.setPreferredSize(new java.awt.Dimension(1106, 700));
        pn_tmbhstk.setLayout(null);

        kd_brgstk.setBorder(null);
        kd_brgstk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kd_brgstkKeyPressed(evt);
            }
        });
        pn_tmbhstk.add(kd_brgstk);
        kd_brgstk.setBounds(60, 140, 220, 20);

        jml_brg.setBorder(null);
        pn_tmbhstk.add(jml_brg);
        jml_brg.setBounds(60, 411, 220, 20);

        hgbl_brg.setBorder(null);
        pn_tmbhstk.add(hgbl_brg);
        hgbl_brg.setBounds(350, 250, 220, 20);

        isi_brg.setBorder(null);
        pn_tmbhstk.add(isi_brg);
        isi_brg.setBounds(350, 310, 220, 20);

        hgbl_stnbli.setBorder(null);
        pn_tmbhstk.add(hgbl_stnbli);
        hgbl_stnbli.setBounds(60, 250, 220, 20);

        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        dftr_pnglrn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Barang", "Harga", "Jml Kardus", "Jml Barang", "Sub Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dftr_pnglrn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dftr_pnglrnMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(dftr_pnglrn);

        pn_tmbhstk.add(jScrollPane2);
        jScrollPane2.setBounds(652, 153, 380, 320);

        hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_off.png"))); // NOI18N
        hps_tblstk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hps_tblstk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hps_tblstkMouseClicked(evt);
            }
        });
        pn_tmbhstk.add(hps_tblstk);
        hps_tblstk.setBounds(1000, 100, 26, 30);

        txt_nmbrg.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        pn_tmbhstk.add(txt_nmbrg);
        txt_nmbrg.setBounds(60, 180, 260, 30);

        hgbl_krds.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/txt_kardus_off.png"))); // NOI18N
        pn_tmbhstk.add(hgbl_krds);
        hgbl_krds.setBounds(340, 220, 240, 120);

        hgblstn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/txt_satuan_off.png"))); // NOI18N
        pn_tmbhstk.add(hgblstn);
        hgblstn.setBounds(50, 220, 240, 60);

        tmbhdftrpnglrn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_tambahkedaftar_off.png"))); // NOI18N
        tmbhdftrpnglrn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tmbhdftrpnglrn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tmbhdftrpnglrnMouseClicked(evt);
            }
        });
        pn_tmbhstk.add(tmbhdftrpnglrn);
        tmbhdftrpnglrn.setBounds(60, 470, 530, 40);

        tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_off.png"))); // NOI18N
        tmbl_oktmbhstk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tmbl_oktmbhstk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tmbl_oktmbhstkMouseClicked(evt);
            }
        });
        pn_tmbhstk.add(tmbl_oktmbhstk);
        tmbl_oktmbhstk.setBounds(640, 560, 410, 25);

        ttl_pnglrn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        pn_tmbhstk.add(ttl_pnglrn);
        ttl_pnglrn.setBounds(750, 506, 280, 40);

        grppil.add(pack);
        pack.setText("Beli perPack");
        pack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                packMouseClicked(evt);
            }
        });
        pn_tmbhstk.add(pack);
        pack.setBounds(340, 180, 120, 23);

        grppil.add(krds);
        krds.setText("Beli PerKardus");
        krds.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        krds.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                krdsMouseClicked(evt);
            }
        });
        pn_tmbhstk.add(krds);
        krds.setBounds(470, 180, 140, 23);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/bg.png"))); // NOI18N
        pn_tmbhstk.add(jLabel9);
        jLabel9.setBounds(0, 4, 1110, 690);

        jLabel2.setText("jLabel2");
        pn_tmbhstk.add(jLabel2);
        jLabel2.setBounds(80, 190, 34, 14);

        add(pn_tmbhstk, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 0, 1120, 690));

        pn_krgstk.setPreferredSize(new java.awt.Dimension(1106, 700));
        pn_krgstk.setLayout(null);

        jmlkrg_stk.setBorder(null);
        pn_krgstk.add(jmlkrg_stk);
        jmlkrg_stk.setBounds(60, 325, 220, 20);

        kd_krgstk.setBorder(null);
        kd_krgstk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kd_krgstkKeyPressed(evt);
            }
        });
        pn_krgstk.add(kd_krgstk);
        kd_krgstk.setBounds(60, 204, 220, 20);

        jScrollPane3.setBorder(null);

        ktrangan.setColumns(10);
        ktrangan.setRows(2);
        ktrangan.setBorder(null);
        jScrollPane3.setViewportView(ktrangan);

        pn_krgstk.add(jScrollPane3);
        jScrollPane3.setBounds(60, 386, 510, 50);

        dftr_brg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dftr_brg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dftr_brgMouseClicked(evt);
            }
        });

        dftr_krugian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Barang", "Jumlah Barang", "Sub Total", "Keterangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dftr_krugian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dftr_krugianMouseClicked(evt);
            }
        });
        dftr_brg.setViewportView(dftr_krugian);

        pn_krgstk.add(dftr_brg);
        dftr_brg.setBounds(652, 153, 380, 320);

        tmbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_tambahkedaftar_off.png"))); // NOI18N
        tmbl_krgstk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tmbl_krgstk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tmbl_krgstkMouseClicked(evt);
            }
        });
        pn_krgstk.add(tmbl_krgstk);
        tmbl_krgstk.setBounds(60, 470, 530, 40);

        ok_krg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_done_off.png"))); // NOI18N
        ok_krg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ok_krg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ok_krgMouseClicked(evt);
            }
        });
        pn_krgstk.add(ok_krg);
        ok_krg.setBounds(640, 560, 410, 25);

        hpstbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_iconhapus_off.png"))); // NOI18N
        hpstbl_krgstk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hpstbl_krgstk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hpstbl_krgstkMouseClicked(evt);
            }
        });
        pn_krgstk.add(hpstbl_krgstk);
        hpstbl_krgstk.setBounds(1000, 100, 30, 30);

        total_krg.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        pn_krgstk.add(total_krg);
        total_krg.setBounds(740, 505, 290, 40);

        nm_krg.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        pn_krgstk.add(nm_krg);
        nm_krg.setBounds(60, 250, 260, 30);

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/bg.png"))); // NOI18N
        pn_krgstk.add(jLabel14);
        jLabel14.setBounds(0, 4, 1110, 690);

        add(pn_krgstk, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 0, 1120, 690));
    }// </editor-fold>//GEN-END:initComponents

    private void clear_tambahstok() {
        editsubtotal = 0;
        String[] x = {};
        stokkode = x;
        editpengeluaran = 0;
        DefaultTableModel modelstok = (DefaultTableModel) dftr_pnglrn.getModel();
        modelstok.setRowCount(0);
        //txt_stokharga.setText("");
        ttl_pnglrn.setText("0");
        kd_brgstk.setText("");
        txt_nmbrg.setText("");
        hgbl_stnbli.setText("");
        hgbl_brg.setText("");
        isi_brg.setText("");
        ts = -1;
    }

    int pengeluaran() {
        int baris = dftr_pnglrn.getRowCount();
        //System.out.println(baris);
        //baris++;
        editpengeluaran = 0;
        for (int i = 0; i <= baris - 1; i++) {
            editpengeluaran += Integer.parseInt(dftr_pnglrn.getValueAt(i, 4).toString());
            //System.out.println(editpengeluaran);
        }
        //System.out.println("keluar : " + editpengeluaran);
        ttl_pnglrn.setText("Rp. " + Integer.toString(editpengeluaran));
        return editpengeluaran;
    }

    int kerugian() {
        int baris = dftr_krugian.getRowCount();
        editkerugian = 0;
        for (int i = 0; i <= baris - 1; i++) {
            editkerugian += Integer.parseInt(dftr_krugian.getValueAt(i, 2).toString());
            System.out.println(editkerugian);
        }
        //System.out.println("keluar : " + editkerugian);
        total_krg.setText("Rp. " + Integer.toString(editkerugian));
        return editkerugian;
    }

    private void clear_kurangstok() {
        editkerugian = 0;
        String[] x = {};
        krgstokkode = x;
        editpengeluaran = 0;
        DefaultTableModel modelstok = (DefaultTableModel) dftr_krugian.getModel();
        modelstok.setRowCount(0);
        //txt_stokharga.setText("");
        total_krg.setText("0");
        kd_krgstk.setText("");
        jmlkrg_stk.setText("");
        ktrangan.setText("");
        ks = -1;
    }

    private void load_tablekategori() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Harga Beli");
        model.addColumn("Harga Jual");
        model.addColumn("Stok barang");
        model.addColumn("Satuan");
        model.addColumn("Kategori");
        String kategori = ktgr_brg.getSelectedItem().toString();
        if (kategori.equals("Semua Kategori")) {
            load_table();
        } else {
            try {
                String sql = "SELECT * FROM barang LEFT JOIN kategori ON kategori.id_kategori = barang.id_kategori WHERE nama_kategori like '%"
                        + kategori + "%';";
                //String sql = "SELECT * FROM barang LEFT JOIN kategori ON kategori.id_kategori = barang.id_kategori;";
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement stm = conn.prepareStatement(sql);
                java.sql.ResultSet res = stm.executeQuery(sql);
                
                while (res.next() == true) {
                    model.addRow(new Object[]{
                        res.getString("kode_barang"),
                        res.getString("nama_barang"),
                        res.getString("harga_beli"),
                        res.getString("harga_jual"),
                        res.getString("stok_barang"),
                        res.getString("satuan_stok"),
                        res.getString("nama_kategori"),});
                }
                tbl_listbrg.setModel(model);
            } catch (Exception e) {
            }
        }
    }

    private void load_table() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Harga Beli");
        model.addColumn("Harga Jual");
        model.addColumn("Stok barang");
        model.addColumn("Satuan");
        model.addColumn("Kategori");
        try {
            String sql = "SELECT * FROM barang LEFT JOIN kategori ON kategori.id_kategori = barang.id_kategori WHERE kode_barang like '%" + txt_cari.getText()
                    + "%' OR nama_barang like '%" + txt_cari.getText() + "%';";
            //+ "%' OR nama_kategori like '%" + ktgr_brg.getSelectedItem()
            //String sql = "SELECT * FROM barang LEFT JOIN kategori ON kategori.id_kategori = barang.id_kategori;";
            java.sql.Connection conn = (Connection) koneksi.configDB();
            java.sql.PreparedStatement stm = conn.prepareStatement(sql);
            java.sql.ResultSet res = stm.executeQuery(sql);
            if (!res.next()) {
                ktrg.setText("Barang Belum Terdaftar");
            } else {
                ktrg.setText("");
            } res.previous();
            while (res.next()) {
                model.addRow(new Object[]{
                    res.getString("kode_barang"),
                    res.getString("nama_barang"),
                    res.getString("harga_beli"),
                    res.getString("harga_jual"),
                    res.getString("stok_barang"),
                    res.getString("satuan_stok"),
                    res.getString("nama_kategori"),});
            }
            tbl_listbrg.setModel(model);
        } catch (Exception e) {
        }
    }

    static String generateKodepengeluaran(boolean ispengeluaran) {
        java.util.Date date = new java.util.Date();
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat m = new SimpleDateFormat("MM");
        SimpleDateFormat t = new SimpleDateFormat("dd");
        SimpleDateFormat y = new SimpleDateFormat("YY");
        int month = Integer.parseInt(m.format(date));
        int pengeluaran = 0;
        try {
            String sql = "select count(id_pengeluaran) from pengeluaran where tanggal_pengeluaran='" + f.format(date) + "';";
            java.sql.Connection conn = (Connection) koneksi.configDB();
            java.sql.PreparedStatement stm = conn.prepareStatement(sql);
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                pengeluaran = Integer.parseInt(res.getString(1));
            }
        } catch (Exception e) {
            System.out.println(e);
        }

        String a;
        String b = "";
        String c = t.format(date);
        String d = y.format(date);
        int e = pengeluaran;

        if (month == 1) {
            b = "J";
        }//januari
        if (month == 2) {
            b = "F";
        }//februari
        if (month == 3) {
            b = "M";
        }//maret
        if (month == 4) {
            b = "A";
        }//april
        if (month == 5) {
            b = "M";
        }//mei
        if (month == 6) {
            b = "U";
        }//juni
        if (month == 7) {
            b = "L";
        }//juli
        if (month == 8) {
            b = "G";
        }//agustus
        if (month == 9) {
            b = "S";
        }//september
        if (month == 10) {
            b = "O";
        }//oktokber
        if (month == 11) {
            b = "N";
        }//november
        if (month == 12) {
            b = "D";
        }//desember
        a = ispengeluaran ? "P" : "N";

        String struk = String.format("%s%s%s%s%04d", a, b, c, d, e);

        return struk.toUpperCase();
    }

    static String generateKodekerugian(boolean iskerugian) {
        java.util.Date date = new java.util.Date();
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat m = new SimpleDateFormat("MM");
        SimpleDateFormat t = new SimpleDateFormat("dd");
        SimpleDateFormat y = new SimpleDateFormat("YY");
        int month = Integer.parseInt(m.format(date));
        int pengeluaran = 0;
        try {

            String sql = "select count(id_kerugian) from kerugian where tanggal_kerugian='" + f.format(date) + "';";
            java.sql.Connection conn = (Connection) koneksi.configDB();
            java.sql.PreparedStatement stm = conn.prepareStatement(sql);
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                pengeluaran = Integer.parseInt(res.getString(1));
            }
        } catch (Exception e) {
            System.out.println(e);
        }

        String a;
        String b = "";
        String c = t.format(date);
        String d = y.format(date);
        int e = pengeluaran;

        if (month == 1) {
            b = "J";
        }//januari
        if (month == 2) {
            b = "F";
        }//februari
        if (month == 3) {
            b = "M";
        }//maret
        if (month == 4) {
            b = "A";
        }//april
        if (month == 5) {
            b = "M";
        }//mei
        if (month == 6) {
            b = "U";
        }//juni
        if (month == 7) {
            b = "L";
        }//juli
        if (month == 8) {
            b = "G";
        }//agustus
        if (month == 9) {
            b = "S";
        }//september
        if (month == 10) {
            b = "O";
        }//oktokber
        if (month == 11) {
            b = "N";
        }//november
        if (month == 12) {
            b = "D";
        }//desember
        a = iskerugian ? "P" : "N";

        String struk = String.format("%s%s%s%s%04d", a, b, c, d, e);

        return struk.toUpperCase();
    }

    void clr_tmbhstk() {
        hgbl_stnbli.setText("");
        kd_brgstk.setText("");
        hgbl_brg.setText("");
        isi_brg.setText("");
        jml_brg.setText("");
    }

    private void load_kategori() {
        try {
            //Resetting the comboBox
            if (ktgr_brg.getItemCount() > 1) {
                String firstItem = ktgr_brg.getItemAt(0); // Store the first item
                ktgr_brg.removeAllItems();
                ktgr_brg.addItem(firstItem); // Add back the first item
            }
            if (boxktgr_tmbhbrg.getItemCount() > 1) {
                String firstItem = boxktgr_tmbhbrg.getItemAt(0); // Store the first item
                boxktgr_tmbhbrg.removeAllItems();
                boxktgr_tmbhbrg.addItem(firstItem); // Add back the first item
            }
            if (boxktgr_edtbrg.getItemCount() > 1) {
                String firstItem = boxktgr_edtbrg.getItemAt(0); // Store the first item
                boxktgr_edtbrg.removeAllItems();
                boxktgr_edtbrg.addItem(firstItem); // Add back the first item
            }
            
            String sql = "select * from kategori;";
            java.sql.Connection conn = (Connection) koneksi.configDB();
            java.sql.PreparedStatement stm = conn.prepareStatement(sql);
            java.sql.ResultSet res = stm.executeQuery(sql);

            while (res.next()) {
                ktgr_brg.addItem(res.getString("nama_kategori"));
                boxktgr_tmbhbrg.addItem(res.getString("nama_kategori"));
                boxktgr_edtbrg.addItem(res.getString("nama_kategori"));
                //System.out.println(res.getString("id_kategori") + " - " + res.getString("nama_kategori"));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void tabel_stok() {
        modelstok.addColumn("Nama Barang");
        modelstok.addColumn("Harga");
        modelstok.addColumn("Jumlah");
        modelstok.addColumn("Subtotal");

        dftr_pnglrn.setModel(modelstok);
    }

    public void clear_edit() {
        load_table();
        pn_tmbhbrg.setVisible(false);
        pn_lsbrg.setVisible(true);
        pn_tmbhstk.setVisible(false);
        pn_krgstk.setVisible(false);
        pn_edtbrg.setVisible(false);
        editkode = "";
        kd_brgedtbrg.setText("");
        nm_brgedtbrg.setText("");
        hgbl_stnbrgedtbrg.setText("");
        hgjl_edtbrg.setText("");
        ktgredtbrg.setText("");
    }

    private void clear_tambahbarang() {
        kd_brg.setText("");
        nm_brg.setText("");
        stn_brg.setText("");
        hgbl_stn.setText("");
        hgjl.setText("");
        ktgr.setText("");
    }

    private void tmbh_brgMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tmbh_brgMousePressed
        // TODO add your handling code here:
        pn_tmbhbrg.setVisible(true);
        pn_lsbrg.setVisible(false);
        pn_tmbhstk.setVisible(false);
        pn_krgstk.setVisible(false);
        pn_edtbrg.setVisible(false);
        tmbh_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahbarang_on.png")));
        tmbh_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahstok_off.png")));
        krgi_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_kurangistok_off.png")));
        lst_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_listbarang_off.png")));
    }//GEN-LAST:event_tmbh_brgMousePressed

    private void lst_brgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lst_brgMouseClicked
        // TODO add your handling code here:
        pn_tmbhbrg.setVisible(false);
        pn_lsbrg.setVisible(true);
        pn_tmbhstk.setVisible(false);
        pn_krgstk.setVisible(false);
        pn_edtbrg.setVisible(false);
        tmbh_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahbarang_off.png")));
        tmbh_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahstok_off.png")));
        krgi_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_kurangistok_off.png")));
        lst_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_listbarang_on.png")));
        load_table();
    }//GEN-LAST:event_lst_brgMouseClicked

    private void ktgrioffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ktgrioffMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_ktgrioffMouseClicked

    private void tmbh_stkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tmbh_stkMouseClicked
        // TODO add your handling code here:
        pn_tmbhstk.setVisible(true);
        pn_tmbhbrg.setVisible(false);
        pn_lsbrg.setVisible(false);
        pn_krgstk.setVisible(false);
        pn_edtbrg.setVisible(false);
        tmbh_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahbarang_off.png")));
        tmbh_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahstok_on.png")));
        krgi_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_kurangistok_off.png")));
        lst_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_listbarang_off.png")));
    }//GEN-LAST:event_tmbh_stkMouseClicked

    private void krgi_stkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_krgi_stkMouseClicked
        // TODO add your handling code here:
        pn_krgstk.setVisible(true);
        pn_tmbhstk.setVisible(false);
        pn_tmbhbrg.setVisible(false);
        pn_lsbrg.setVisible(false);
        pn_edtbrg.setVisible(false);
        tmbh_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahbarang_off.png")));
        tmbh_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahstok_off.png")));
        krgi_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_kurangistok_on.png")));
        lst_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_listbarang_off.png")));
    }//GEN-LAST:event_krgi_stkMouseClicked

    private void smpn_tmbhbrgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smpn_tmbhbrgMouseClicked
        // TODO add your handling code here:
        int jwb = JOptionPane.showOptionDialog(this, "Apakah data yang anda\nmasukkan sudah benar ?", "Konfirmasi", 2, 1, null, null, null);
        if (jwb == 0) {
            try {
                if (isnew) {
                    String sql = "INSERT INTO `kategori`(`nama_kategori`) VALUES ('"
                            + ktgr.getText() + "')";
                    java.sql.Connection conn = (Connection) koneksi.configDB();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.execute();
                }

                String id_kategori = "";
                String sql1;
                if (isnew) {
                    sql1 = "SELECT * FROM kategori WHERE nama_kategori='" + ktgr.getText() + "';";
                } else {
                    sql1 = "SELECT * FROM kategori WHERE nama_kategori='" + boxktgr_tmbhbrg.getSelectedItem().toString() + "';";
                }
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement pst1 = conn.prepareStatement(sql1);
                java.sql.ResultSet rs = pst1.executeQuery(sql1);
                if (rs.next()) {
                    id_kategori = rs.getString("id_kategori");
                }

                String sql2 = "INSERT INTO `barang`(`kode_barang`, `nama_barang`, `satuan_stok`, `harga_beli`, `harga_jual`, `id_kategori`) VALUES ('"
                        + kd_brg.getText() + "','"
                        + nm_brg.getText() + "','"
                        + stn_brg.getText() + "','"
                        + hgbl_stn.getText() + "','"
                        + hgjl.getText() + "','"
                        + id_kategori + "')";
                java.sql.PreparedStatement pst2 = conn.prepareStatement(sql2);
                pst2.execute();
                JOptionPane.showMessageDialog(null, "Barang Ditambahkan");
                load_table();
                clear_tambahbarang();
                load_kategori();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_smpn_tmbhbrgMouseClicked

    private void kd_brgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kd_brgKeyPressed
        // TODO add your handling code here:
        String Barcode = this.kd_brg.getText();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                java.sql.Connection conn = (Connection) koneksi.configDB();
                pst = conn.prepareStatement("select * from barang WHERE kode_barang =?");
                pst.setString(1, Barcode);
                rs = pst.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Kode Barang Telah Digunakan");
                    kd_brg.setText("");
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_kd_brgKeyPressed

    private void smpn_edtbrgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smpn_edtbrgMouseClicked
        // TODO add your handling code here:
        // program ini masih belum selesai
        int jwb = JOptionPane.showOptionDialog(this, "Apakah data yang anda\nmasukkan sudah benar ?", "Konfirmasi", 2, 1, null, null, null);
        if (jwb == 0) {
            try {
                if (isnew) {
                    String sql = "INSERT INTO `kategori`(`nama_kategori`) VALUES ('"
                            + ktgredtbrg.getText() + "')";
                    java.sql.Connection conn = (Connection) koneksi.configDB();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.execute();
                }

                String id_kategori = "";
                String sql1;
                if (isnew) {
                    sql1 = "SELECT * FROM kategori WHERE nama_kategori='" + ktgredtbrg.getText() + "';";
                } else {
                    sql1 = "SELECT * FROM kategori WHERE nama_kategori='" + boxktgr_edtbrg.getSelectedItem().toString() + "';";
                }
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement pst1 = conn.prepareStatement(sql1);
                java.sql.ResultSet rs = pst1.executeQuery(sql1);
                if (rs.next()) {
                    id_kategori = rs.getString("id_kategori");
                }

                String sql2 = "UPDATE barang"
                        + " SET kode_barang ='" + kd_brgedtbrg.getText()
                        + "', nama_barang='" + nm_brgedtbrg.getText()
                        + "', harga_beli='" + hgbl_stnbrgedtbrg.getText()
                        + "', harga_jual='" + hgjl_edtbrg.getText()
                        + "', id_kategori='" + id_kategori
                        + "' WHERE kode_barang ='" + editkode + "'";
                java.sql.PreparedStatement pst2 = conn.prepareStatement(sql2);
                pst2.execute();
                JOptionPane.showMessageDialog(null, "Barang Telah Diedit");
                load_table();
                clear_edit();
                load_kategori();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_smpn_edtbrgMouseClicked

    private void tbl_listbrgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_listbrgMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        int baris = tbl_listbrg.rowAtPoint(evt.getPoint());
        editkode = tbl_listbrg.getValueAt(baris, 0).toString();
        kd_brgedtbrg.setText(editkode);

        if (tbl_listbrg.getValueAt(baris, 1) == null) {
            nm_brgedtbrg.setText("");
        } else {
            nm_brgedtbrg.setText(tbl_listbrg.getValueAt(baris, 1).toString());
        }
        if (tbl_listbrg.getValueAt(baris, 2) == null) {
            hgbl_stnbrgedtbrg.setText("");
        } else {
            hgbl_stnbrgedtbrg.setText(tbl_listbrg.getValueAt(baris, 2).toString());
        }
        if (tbl_listbrg.getValueAt(baris, 3) == null) {
            hgjl_edtbrg.setText("");
        } else {
            hgjl_edtbrg.setText(tbl_listbrg.getValueAt(baris, 3).toString());
        }
        if (tbl_listbrg.getValueAt(baris, 6) == null) {
            boxktgr_edtbrg.setSelectedIndex(0);
        } else {
            boxktgr_edtbrg.setSelectedItem(tbl_listbrg.getValueAt(baris, 6));
        }
        pn_lsbrg.setVisible(false);
        pn_tmbhbrg.setVisible(false);
        pn_tmbhstk.setVisible(false);
        pn_krgstk.setVisible(false);
        pn_edtbrg.setVisible(true);
    }//GEN-LAST:event_tbl_listbrgMouseClicked

    private void kd_brgstkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kd_brgstkKeyPressed
        // TODO add your handling code here:   
        String Barcode = this.kd_brgstk.getText();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                //java.util.Date date = new java.util.Date();
                //java.sql.Date sqldate = new java.sql.Date(date.getTime());   
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement pst = conn.prepareStatement("SELECT * FROM barang WHERE kode_barang =?;");
                pst.setString(1, Barcode);
                rs = pst.executeQuery();
                if (rs.next() == true) {
                    kodeBarang=rs.getString("kode_barang");
                    namabarang=rs.getString("nama_barang");
                    sisastok=rs.getInt("stok_barang");
                    pack.setSelected(true);
                    hgbl_krds.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/txt_kardus_off.png")));
                    hgblstn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/txt_satuan_on.png")));
                    hgbl_stnbli.setVisible(true);
                    hgbl_stnbli.setText("");
                    hgbl_brg.setVisible(false);
                    hgbl_brg.setText("");
                    isi_brg.setVisible(false);
                    isi_brg.setText("");
                    hgbl_stnbli.enable();
                    tmbhdftrpnglrn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_tambahkedaftar_on.png")));
                    txt_nmbrg.setText(rs.getString(2));
                    hgbl_stnbli.setText(rs.getString(5));
                } else {
                    tmbhdftrpnglrn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_tambahkedaftar_off.png")));
                    //tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_off.png")));
                    txt_nmbrg.setText("Cek Kode Lagi");
                    int jawab = JOptionPane.showOptionDialog(this, "Barang Belum Terdaftar \nApakah Anda Ingin Menambahkan Barang Yang Belum Terdaftar ?", "Pilihan",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                    if (jawab == JOptionPane.YES_OPTION) {
                        pn_tmbhstk.setVisible(false);
                        pn_tmbhbrg.setVisible(true);
                        pn_lsbrg.setVisible(false);
                        pn_krgstk.setVisible(false);
                        pn_edtbrg.setVisible(false);
                        tmbh_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahbarang_on.png")));
                        tmbh_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahstok_off.png")));
                        krgi_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_kurangistok_off.png")));
                        lst_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_listbarang_off.png")));
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(pg_Stok.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_kd_brgstkKeyPressed

    private void boxktgr_tmbhbrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxktgr_tmbhbrgActionPerformed
        // TODO add your handling code here:
        if (boxktgr_tmbhbrg.getSelectedItem().toString() == "Kategori Baru") {
            ktgr.setVisible(true);
            ktgr.enable();
            ktgrioff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/txt_kategori_on.png")));
            ktgredtbrg.setText("");
            isnew = true;
        } else {
            ktgr.disable();
            ktgrioff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/txt_kategori_off.png")));
            try {
                isnew = false;
                kategori = boxktgr_tmbhbrg.getSelectedItem().toString();
                kategori = kategori.substring(0, kategori.indexOf("-"));
                System.out.println(kategori);
                String sql = "SELECT * FROM kategori WHERE id_kategori ='" + kategori + "';";
                System.out.println(sql);
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement stm = conn.prepareStatement(sql);
                java.sql.ResultSet res = stm.executeQuery(sql);
                if (res.next()) {
                    ktgr.setText(res.getString("nama_kategori"));
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_boxktgr_tmbhbrgActionPerformed

    private void boxktgr_edtbrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxktgr_edtbrgActionPerformed
        // TODO add your handling code here:
        if (boxktgr_edtbrg.getSelectedItem().toString() == "Kategori Baru") {
            ktgredtbrg.setVisible(true);
            ktgredtbrg.enable();
            ktgrioffedtbrg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/txt_kategori_on.png")));
            ktgredtbrg.setText("");
            isnew = true;
        } else {
            ktgrioffedtbrg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/List barang/txt_kategori_off.png")));
            ktgredtbrg.disable();
            try {
                isnew = false;
                kategori = boxktgr_edtbrg.getSelectedItem().toString();
                //kategori = kategori.substring(0, kategori.indexOf("-"));
                System.out.println(kategori);
                String sql = "SELECT * FROM kategori WHERE id_kategori ='" + kategori + "';";
                System.out.println(sql);
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement stm = conn.prepareStatement(sql);
                java.sql.ResultSet res = stm.executeQuery(sql);
                if (res.next()) {
                    ktgredtbrg.setText(res.getString("nama_kategori"));
                }
            } catch (Exception e) {
                System.out.println("boxktgr_edtbrg: " +e.getMessage());
            }
        }
    }//GEN-LAST:event_boxktgr_edtbrgActionPerformed

    private void packMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_packMouseClicked
        // TODO add your handling code here:
        hgbl_krds.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/txt_kardus_off.png")));
        hgblstn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/txt_satuan_on.png")));
        hgbl_stnbli.setVisible(true);
        hgbl_stnbli.setText("");
        hgbl_brg.setVisible(false);
        hgbl_brg.setText("");
        isi_brg.setVisible(false);
        isi_brg.setText("");
        hgbl_stnbli.enable();
    }//GEN-LAST:event_packMouseClicked

    private void krdsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_krdsMouseClicked
        // TODO add your handling code here:
        hgbl_krds.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/txt_kardus_on.png")));
        hgblstn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/txt_satuan_off.png")));
        hgbl_stnbli.setVisible(false);
        hgbl_stnbli.setText("");
        hgbl_brg.setVisible(true);
        hgbl_brg.setText("");
        isi_brg.setVisible(true);
        isi_brg.setText("");
    }//GEN-LAST:event_krdsMouseClicked

    private void tmbhdftrpnglrnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tmbhdftrpnglrnMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelstok = (DefaultTableModel) dftr_pnglrn.getModel();
        if (pack.isSelected()) {
            try {
                String kode = kd_brgstk.getText();
                String sql = "SELECT * FROM barang WHERE kode_barang ='" + kode + "';";
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement stm = conn.prepareStatement(sql);
                java.sql.ResultSet res = stm.executeQuery(sql);

                if (res.next()) {
                    //DefaultTableModel model = (DefaultTableModel) dftr_pnglrn.getModel();
                    editsubtotal = Integer.parseInt(hgbl_stnbli.getText()) * Integer.parseInt(jml_brg.getText());
                    boolean newItem = true;
                    for (int i = 0; i < dftr_pnglrn.getRowCount(); i++) {
                        if (dftr_pnglrn.getValueAt(i, 0) != null && dftr_pnglrn.getValueAt(i, 0).toString().contains(namabarang)) {
                            newItem = false;
                            int newJumlah = Integer.valueOf(dftr_pnglrn.getValueAt(i, 3).toString()) + Integer.parseInt(jml_brg.getText());
                            //int newkrds =Integer.valueOf(dftr_pnglrn.setValueAt(i, 3));
                            int subTotal = newJumlah * editsubtotal;
                            modelstok.setValueAt(newJumlah, i, 3);
                            modelstok.setValueAt(subTotal, i, 4);
                        }
                    }
                    if (newItem) {
                        stokkode = addX(stokkode.length, stokkode, kode);
                        modelstok.addRow(new Object[]{
                            res.getString(2),
                            hgbl_stnbli.getText(),
                            0,
                            jml_brg.getText(),
                            Integer.toString(editsubtotal)
                        });
                    }
                    int rowindex = modelstok.getRowCount() - 1;
                    modelstok.fireTableRowsInserted(rowindex, rowindex);
                    tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_on.png")));
                    //hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_on.png")));
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            try {
                String kode = kd_brgstk.getText();
                String sql = "SELECT * FROM barang WHERE kode_barang ='" + kode + "';";
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement stm = conn.prepareStatement(sql);
                java.sql.ResultSet res = stm.executeQuery(sql);

                if (res.next()) {
                    pembagi = Integer.parseInt(hgbl_brg.getText()) / Integer.parseInt(isi_brg.getText());
                    hgbl_stnbli.setText(Integer.toString(pembagi));
                    hgbl_stnbli.disable();
                    perkali = Integer.parseInt(jml_brg.getText()) * Integer.parseInt(isi_brg.getText());
                    editsubtotal = pembagi * perkali;
                    hgbl_stnbli.setText("");
                    boolean newItem = true;
                    for (int i = 0; i < dftr_pnglrn.getRowCount(); i++) {
                        if (dftr_pnglrn.getValueAt(i, 0) != null && dftr_pnglrn.getValueAt(i, 0).toString().contains(namabarang)) {
                            newItem = false;
                            int newJumlah = Integer.valueOf(dftr_pnglrn.getValueAt(i, 2).toString()) + Integer.parseInt(jml_brg.getText());
                            int newbarang = perkali + Integer.valueOf(dftr_pnglrn.getValueAt(i, 3).toString());
                            int subTotal = newbarang * Integer.valueOf(dftr_pnglrn.getValueAt(i, 1).toString());
                            modelstok.setValueAt(newJumlah, i, 2);
                            modelstok.setValueAt(newbarang, i, 3);
                            modelstok.setValueAt(subTotal, i, 4);
                            System.out.println(perkali);
                        }
                    }
                    if (newItem) {
                    stokkode = addX(stokkode.length, stokkode, kode);
                    modelstok.addRow(new Object[]{
                        res.getString(2),
                        hgbl_stnbli.getText(),
                        jml_brg.getText(),
                        isi_brg.getText(),
                        Integer.toString(editsubtotal)
                    });
                    }
                    int rowindex = modelstok.getRowCount() - 1;
                    modelstok.fireTableRowsInserted(rowindex, rowindex);
                    jml_brg.setText("");
                    tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_on.png")));
                    //hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_on.png")));
                } else {
                    //tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_off.png")));
                    //hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_off.png")));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Silahkan Isi Semua Kolom");
            }
        }
        pengeluaran();
    }//GEN-LAST:event_tmbhdftrpnglrnMouseClicked

    private void tmbl_oktmbhstkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tmbl_oktmbhstkMouseClicked
        // TODO add your handling code here:        
        LocalDate currentDate = LocalDate.now();
        LocalTime currentTime = LocalTime.now();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        String tanggal = currentDate.format(dateFormatter);
        String waktu = currentTime.format(timeFormatter);
        String kode = generateKodepengeluaran(kod);
        if (editpengeluaran > 1) {
            int jawab = JOptionPane.showOptionDialog(this, "Apakah Data Yang Anda Masukkan Sudah Benar?", "Pilihan",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (jawab == JOptionPane.YES_OPTION) {
                int baris = dftr_pnglrn.getRowCount();
                boolean status = true;
                try {
                    String sql = "INSERT INTO `pengeluaran`(`id_pengeluaran`, `tanggal_pengeluaran`"
                            + ",`waktu_pengeluaran`, `total_pengeluaran`, `total_barang`) VALUES ('"
                            + kode + "','"
                            + tanggal + "','"
                            + waktu + "','"
                            + editpengeluaran + "','"
                            + baris + "')";
                    java.sql.Connection conn = (Connection) koneksi.configDB();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.execute();
                    for (int i = 0; i < baris; i++) {
                        String sql1 = "INSERT INTO `detail_Pengeluaran`(`id_pengeluaran`, `kode_barang`, `quantity`, `harga_satuan`, `subtotal`) VALUES ('"
                                + kode + "','" //kodestruk
                                + stokkode[i].toString() + "','" //kodebarang
                                + dftr_pnglrn.getValueAt(i, 3).toString() + "','"//qty
                                + dftr_pnglrn.getValueAt(i, 1).toString() + "','"//harga satuan
                                + editsubtotal + "')";//subtotal
                        java.sql.Connection con1 = (Connection) koneksi.configDB();
                        java.sql.PreparedStatement pst1 = con1.prepareStatement(sql1);
                        pst1.execute();
                    }
                    clear_tambahstok();
                    //txt_stokkode.setText("");
                } catch (Exception e) {
                    status = false;
                    JOptionPane.showMessageDialog(this, "salah");
                }
                if (status) {
                    JOptionPane.showMessageDialog(null, "Stok Berhasil Ditambahkan");
                }
            }
        } else {

            JOptionPane.showMessageDialog(null, "Silahkan Masukkan Data Dengan Benar");
        }
        //tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_off.png")));
    }//GEN-LAST:event_tmbl_oktmbhstkMouseClicked

    private void kmbl_edtbrgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kmbl_edtbrgMouseClicked
        // TODO add your handling code here:
        clear_edit();
    }//GEN-LAST:event_kmbl_edtbrgMouseClicked

    private void kd_krgstkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kd_krgstkKeyPressed
        // TODO add your handling code here:
        String Barcode = this.kd_krgstk.getText();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                //java.util.Date date = new java.util.Date();
                //java.sql.Date sqldate = new java.sql.Date(date.getTime());   
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement pst = conn.prepareStatement("SELECT * FROM barang WHERE kode_barang =?;");
                pst.setString(1, Barcode);
                rs = pst.executeQuery();
                if (rs.next() == true) {
                    kodeBarang1=rs.getString("kode_barang");
                    namabarang1=rs.getString("nama_barang");
                    sisastok1=rs.getInt("stok_barang");
                    tmbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_tambahkedaftar_on.png")));
                    nm_krg.setText(rs.getString(2));
                } else {
                    tmbhdftrpnglrn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_tambahkedaftar_off.png")));
                    ok_krg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_done_off.png")));
                    txt_nmbrg.setText("Cek Kode Lagi");
                    JOptionPane.showMessageDialog(this, "Barang Belum Terdaftar");
                    /*int jawab = JOptionPane.showOptionDialog(this, "Apakah Anda Ingin Menambahkan Barang Yang Belum Terdaftar ?", "Pilihan",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                    if (jawab == JOptionPane.YES_OPTION) {
                        pn_tmbhstk.setVisible(false);
                        pn_tmbhbrg.setVisible(true);
                        pn_lsbrg.setVisible(false);
                        pn_krgstk.setVisible(false);
                        pn_edtbrg.setVisible(false);
                        tmbh_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahbarang_on.png")));
                        tmbh_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_tambahstok_off.png")));
                        krgi_stk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_kurangistok_off.png")));
                        lst_brg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Sub_stok/btn_listbarang_off.png")));
                    }*/
                }
            } catch (SQLException ex) {
                Logger.getLogger(pg_Stok.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_kd_krgstkKeyPressed

    private void tmbl_krgstkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tmbl_krgstkMouseClicked
        // TODO add your handling code here:
        //int baris = dftr_krugian.getRowCount();
        DefaultTableModel modelstok = (DefaultTableModel) dftr_krugian.getModel();
        try {
            String kode = kd_krgstk.getText();
            String sql = "SELECT * FROM barang WHERE kode_barang ='" + kode + "';";
            java.sql.Connection conn = (Connection) koneksi.configDB();
            java.sql.PreparedStatement stm = conn.prepareStatement(sql);
            java.sql.ResultSet res = stm.executeQuery(sql);

            if (res.next()) {
                if (sisastok1 < Integer.valueOf(jmlkrg_stk.getText())) {
                    JOptionPane.showMessageDialog(this, "Pengurangan Stok Melebihi Stok Yang Ada");
                } else {
                    ok_krg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_done_on.png")));
                    //kurang = res.getInt(3) - Integer.parseInt(jmlkrg_stk.getText());
                    editkerugian = Integer.parseInt(jmlkrg_stk.getText()) * Integer.parseInt(res.getString(5));
                    boolean newItem = true;
                    for (int i = 0; i < dftr_krugian.getRowCount(); i++) {
                        if (dftr_krugian.getValueAt(i, 0) != null && dftr_krugian.getValueAt(i, 0).toString().contains(namabarang1)) {
                            newItem = false;
                            int newJumlah = Integer.valueOf(dftr_krugian.getValueAt(i, 1).toString()) + Integer.parseInt(jmlkrg_stk.getText());
                            if (sisastok1 < newJumlah) {
                                JOptionPane.showMessageDialog(this, "Pengurangan Stok Melebihi Stok Yang Ada");
                            } else {
                                //String newktrg = ktrangan.getText();
                                int subTotal = newJumlah * editkerugian;
                                modelstok.setValueAt(newJumlah, i, 1);
                                modelstok.setValueAt(subTotal, i, 2);
                                //modelstok.setValueAt(newktrg, i, 3);
                            }
                        }
                    }
                    if (newItem) {
                        krgstokkode = addX(krgstokkode.length, krgstokkode, kode);
                        modelstok.addRow(new Object[]{
                            res.getString(2),
                            jmlkrg_stk.getText(),
                            Integer.toString(editkerugian),
                            ktrangan.getText()
                        });
                    }
                }
                int rowindex = modelstok.getRowCount() - 1;
                modelstok.fireTableRowsInserted(rowindex, rowindex);
                kerugian();
            } else {
                //ok_krg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_done_off.png")));
                //hpstbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_iconhapus_off.png")));
            }
            tmbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_tambahkedaftar_on.png")));
            //hpstbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_iconhapus_on.png")));
            jmlkrg_stk.setText("");
            ktrangan.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Silahkan Isi Semua Kolom");
        }
    }//GEN-LAST:event_tmbl_krgstkMouseClicked

    private void ok_krgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ok_krgMouseClicked
        // TODO add your handling code here:
        LocalDate currentDate = LocalDate.now();
        LocalTime currentTime = LocalTime.now();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        String tanggal = currentDate.format(dateFormatter);
        String waktu = currentTime.format(timeFormatter);
        String kode = generateKodekerugian(kodker);
        if (editkerugian > 1) {
            int jawab = JOptionPane.showOptionDialog(this, "Apakah Data Yang Anda Masukkan Sudah Benar?", "Pilihan",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (jawab == JOptionPane.YES_OPTION) {
                int baris = dftr_krugian.getRowCount();
                boolean status = true;
                try {
                    String kode_pengeluaran = "";
                    String sql = "INSERT INTO `kerugian`(`id_kerugian`, `tanggal_kerugian`"
                            + ",`waktu_kerugian`, `total_kerugian`, `total_barang`) VALUES ('"
                            + kode + "','"
                            + tanggal + "','"
                            + waktu + "','"
                            + editkerugian + "','"
                            + baris + "')";
                    java.sql.Connection conn = (Connection) koneksi.configDB();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.execute();
                    int total = 0;
                    for (int i = 0; i < dftr_krugian.getRowCount(); i++) {
                        //   int amount = Integer.parseInt((String) dftr_pnglrn.getValueAt(i, 3));
                        //    total += amount;
                        String sql1 = "INSERT INTO `detail_kerugian`(`id_kerugian`, `kode_barang`, `quantity`, `subtotal`, `keterangan`) VALUES ('"
                                + kode + "','" //kodestruk
                                + krgstokkode[i].toString() + "','" //kodebarang
                                + dftr_krugian.getValueAt(i, 1).toString() + "','"//qty
                                + dftr_krugian.getValueAt(i, 2).toString() + "','"//subtotal
                                + dftr_krugian.getValueAt(i, 3).toString() + "')";//keterangan
                        java.sql.Connection con1 = (Connection) koneksi.configDB();
                        java.sql.PreparedStatement pst1 = con1.prepareStatement(sql1);
                        pst1.execute();
                    }
                    clear_kurangstok();
                    //txt_stokkode.setText("");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                    status = false;
                }

                if (status) {
                    JOptionPane.showMessageDialog(null, "Stok Berhasil Dikurangi");
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Silahkan Masukkan Data Terlebih Dahulu");
        }
    }//GEN-LAST:event_ok_krgMouseClicked

    private void dftr_pnglrnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dftr_pnglrnMouseClicked
        // TODO add your handling code here:
        ts = dftr_pnglrn.rowAtPoint(evt.getPoint());
        if (ts >= 0) {
            hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_on.png")));
        } else {
            hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_off.png")));
        }
    }//GEN-LAST:event_dftr_pnglrnMouseClicked

    private void hps_tblstkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hps_tblstkMouseClicked
        // TODO add your handling code here:
        if (kerugian() <= 0) {
            ok_krg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_done_off.png")));
        }
        if (ts >= 0) {
            DefaultTableModel model = (DefaultTableModel) dftr_pnglrn.getModel();
            model.removeRow(ts);
            model.fireTableRowsDeleted(ts, ts);
            pengeluaran();
            ts = -1;
            hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_off.png")));
        } else {
            if (dftr_pnglrn.getRowCount() > 0) {
                JOptionPane.showMessageDialog(this, "Klik Barang Yang Ingin Dihapus");
            } else {
                JOptionPane.showMessageDialog(this, "Isi Tabel Terlebih Dahulu");
            }
        }
        if (editpengeluaran <= 0) {
            tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_off.png")));
        }
        //System.out.println(dftr_pnglrn.getRowCount());
    }//GEN-LAST:event_hps_tblstkMouseClicked

    private void hpstbl_krgstkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hpstbl_krgstkMouseClicked
        // TODO add your handling code here:
        if (ks >= 0) {
            DefaultTableModel model = (DefaultTableModel) dftr_krugian.getModel();
            model.removeRow(ks);
            model.fireTableRowsDeleted(ks, ks);
            kerugian();
            ks = -1;
            hpstbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_iconhapus_off.png")));
        } else {
            if (dftr_krugian.getRowCount() > 0) {
                JOptionPane.showMessageDialog(this, "Klik Barang Yang Ingin Dihapus");
            } else {
                JOptionPane.showMessageDialog(this, "Isi Tabel Terlebih Dahulu");
            }
        }
        if (editkerugian <= 0) {
            ok_krg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_done_off.png")));
        }
    }//GEN-LAST:event_hpstbl_krgstkMouseClicked

    private void dftr_brgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dftr_brgMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dftr_brgMouseClicked

    private void dftr_krugianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dftr_krugianMouseClicked
        // TODO add your handling code here:
        ks = dftr_krugian.rowAtPoint(evt.getPoint());
        if (ks >= 0) {
            hpstbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_iconhapus_on.png")));
        } else {
            hpstbl_krgstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/kurangi stok/btn_iconhapus_off.png")));
        }
    }//GEN-LAST:event_dftr_krugianMouseClicked

    private void txt_cariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cariKeyReleased
        // TODO add your handling code here:
        load_table();
    }//GEN-LAST:event_txt_cariKeyReleased

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        int x = JOptionPane.showOptionDialog(this, "Apakah Anda Yakin Ingin Menghapus Barang Tersebut?", "Konfirmasi", 2, 1, null, null, null);
        System.out.println(x);
        if (x == 0) {
            try {
                String sql = "DELETE FROM barang WHERE kode_barang ='" + editkode + "'";
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Barang Berhasil dihapus");
                clear_edit();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void ktgr_brgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ktgr_brgActionPerformed
        // TODO add your handling code here:
        load_tablekategori();
    }//GEN-LAST:event_ktgr_brgActionPerformed
    //System.out.println(baris);
    //JOptionPane.showMessageDialog(this, baris);
    //baris++;

    /*public void kd_brgKeyPressed(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        String Barcode = this.kd_brg.getText();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER);
    }*/
 /*for (int i = 0; i <= baris - 1; i++) {
                    try {
                        String sql = "UPDATE barang SET"
                                + " `harga_beli`= '" + dftr_pnglrn.getValueAt(i, 1).toString() + "',"
                                + " `stok_barang`= " + dftr_pnglrn.getValueAt(i, 3).toString()
                                + " WHERE `kode_barang`='" + stokkode[i].toString() + "';";
                        System.out.println(sql);
                        java.sql.Connection conn = (Connection) koneksi.configDB();
                        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                        pst.execute();
                        load_table();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                        status = false;
                    }
                }*/
    
    
    
        
        /*DefaultTableModel modelstok = (DefaultTableModel) dftr_pnglrn.getModel();
        if (pack.isSelected()) {
            try {
                String kode = kd_brgstk.getText();
                String sql = "SELECT * FROM barang WHERE kode_barang ='" + kode + "';";
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement stm = conn.prepareStatement(sql);
                java.sql.ResultSet res = stm.executeQuery(sql);

                if (res.next()) {
                    editsubtotal = Integer.parseInt(hgbl_stnbli.getText()) * Integer.parseInt(jml_brg.getText());
                    //stokkode = addX(stokkode.length, stokkode, kode);
                    modelstok.addRow(new Object[]{
                        res.getString(2),
                        hgbl_stnbli.getText(),
                        isi_brg.getText(),
                        jml_brg.getText(),
                        Integer.toString(editsubtotal)
                    });
                    int rowindex = modelstok.getRowCount() - 1;
                    modelstok.fireTableRowsInserted(rowindex, rowindex);
                    jml_brg.setText("");
                    tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_on.png")));
                    //hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_on.png")));
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            try {
                String kode = kd_brgstk.getText();
                String sql = "SELECT * FROM barang WHERE kode_barang ='" + kode + "';";
                java.sql.Connection conn = (Connection) koneksi.configDB();
                java.sql.PreparedStatement stm = conn.prepareStatement(sql);
                java.sql.ResultSet res = stm.executeQuery(sql);

                if (res.next()) {
                    pembagi = Integer.parseInt(hgbl_brg.getText()) / Integer.parseInt(isi_brg.getText());
                    hgbl_stnbli.setText(Integer.toString(pembagi));
                    hgbl_stnbli.disable();
                    perkali = Integer.parseInt(jml_brg.getText()) * Integer.parseInt(isi_brg.getText());
                    editsubtotal = pembagi * perkali;
                    stokkode = addX(stokkode.length, stokkode, kode);
                    modelstok.addRow(new Object[]{
                        res.getString(2),
                        hgbl_stnbli.getText(),
                        jml_brg.getText(),
                        isi_brg.getText(),
                        Integer.toString(editsubtotal)
                    });
                    int rowindex = modelstok.getRowCount() - 1;
                    modelstok.fireTableRowsInserted(rowindex, rowindex);
                    jml_brg.setText("");
                    tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_on.png")));
                    //hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_on.png")));
                } else {
                    //tmbl_oktmbhstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_done_off.png")));
                    //hps_tblstk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/Stok/tambah stok/btn_iconhapus_off.png")));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Silahkan Isi Semua Kolom");
            }
        }
        
        pengeluaran();*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg_edtbrg;
    private javax.swing.JComboBox<String> boxktgr_edtbrg;
    private javax.swing.JComboBox<String> boxktgr_tmbhbrg;
    private javax.swing.JScrollPane dftr_brg;
    private javax.swing.JTable dftr_krugian;
    private javax.swing.JTable dftr_pnglrn;
    private javax.swing.ButtonGroup grppil;
    private javax.swing.JTextField hgbl_brg;
    private javax.swing.JLabel hgbl_krds;
    private javax.swing.JTextField hgbl_stn;
    private javax.swing.JTextField hgbl_stnbli;
    private javax.swing.JTextField hgbl_stnbrgedtbrg;
    private javax.swing.JLabel hgblstn;
    private javax.swing.JTextField hgjl;
    private javax.swing.JTextField hgjl_edtbrg;
    private javax.swing.JLabel hps_tblstk;
    private javax.swing.JLabel hpstbl_krgstk;
    private javax.swing.JTextField isi_brg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jml_brg;
    private javax.swing.JTextField jmlkrg_stk;
    private javax.swing.JTextField kd_brg;
    private javax.swing.JTextField kd_brgedtbrg;
    private javax.swing.JTextField kd_brgstk;
    private javax.swing.JTextField kd_krgstk;
    private javax.swing.JLabel kmbl_edtbrg;
    private javax.swing.JRadioButton krds;
    private javax.swing.JLabel krgi_stk;
    private javax.swing.JTextField ktgr;
    private javax.swing.JComboBox<String> ktgr_brg;
    private javax.swing.JTextField ktgredtbrg;
    private javax.swing.JLabel ktgrioff;
    private javax.swing.JLabel ktgrioffedtbrg;
    private javax.swing.JTextArea ktrangan;
    private javax.swing.JLabel ktrg;
    private javax.swing.JLabel lst_brg;
    private javax.swing.JTextField nm_brg;
    private javax.swing.JTextField nm_brgedtbrg;
    private javax.swing.JLabel nm_krg;
    private javax.swing.JLabel ok_krg;
    private javax.swing.JRadioButton pack;
    private javax.swing.JPanel pn_btn;
    private javax.swing.JPanel pn_edtbrg;
    private javax.swing.JPanel pn_krgstk;
    private javax.swing.JPanel pn_lsbrg;
    private javax.swing.JPanel pn_tmbhbrg;
    private javax.swing.JPanel pn_tmbhstk;
    private javax.swing.JLabel smpn_edtbrg;
    private javax.swing.JLabel smpn_tmbhbrg;
    private javax.swing.JTextField stn_brg;
    private javax.swing.JTable tbl_listbrg;
    private javax.swing.JLabel tmbh_brg;
    private javax.swing.JLabel tmbh_stk;
    private javax.swing.JLabel tmbhdftrpnglrn;
    private javax.swing.JLabel tmbl_krgstk;
    private javax.swing.JLabel tmbl_oktmbhstk;
    private javax.swing.JLabel total_krg;
    private javax.swing.JLabel ttl_pnglrn;
    private javax.swing.JTextField txt_cari;
    private javax.swing.JLabel txt_nmbrg;
    // End of variables declaration//GEN-END:variables
}
